name: Regenerate Database
on:
  workflow_dispatch:
  schedule:
    - cron: '10 3,9,15,21 * * *' # run 10 past every 6 hours
    
env:
  CACHE_CONTENT: "data/cache/BrickStore/downloads.zip"

jobs:
  regenerate:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Set tag name
      run: echo "TAGNAME=v$(date +'%Y.%m.%d-%H.%M')" >> $GITHUB_ENV

    - uses: actions/checkout@v4

    - name: Restore cache
      id: restore-cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.CACHE_CONTENT }}
        key: data-cache-${{ env.TAGNAME }}
        restore-keys: |
          data-cache-

    - name: Create empty data directory
      if: steps.restore-cache.outputs.cache-matched-key == ''
      run: |
        mkdir -p data/cache/BrickStore
        wget https://data.brickstore.dev/downloads.zip -O data/cache/BrickStore/downloads.zip

    - name: Run BrickStore
      shell: bash
      run: |
        find $PWD/data
        docker run --rm \
               -e BRICKLINK_USERNAME="${{ secrets.BRICKLINK_USERNAME }}" \
               -e BRICKLINK_PASSWORD="${{ secrets.BRICKLINK_PASSWORD }}" \
               -e BRICKLINK_AFFILIATE_APIKEY="${{ secrets.BRICKLINK_AFFILIATE_APIKEY }}" \
               -e REBRICKABLE_APIKEY="${{ secrets.REBRICKABLE_APIKEY }}" \
               -v "$PWD/data:/data" \
               --user $(id -u) \
               --name "brickstore-backend" \
               rgriebl/brickstore-backend:${{ vars.BRICKSTORE_BUILD_NUMBER }}

    - uses: actions/cache/save@v4
      with:
        path: ${{ env.CACHE_CONTENT }}
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "data/cache/BrickStore/downloads.zip,data/logs/*,data/db/*.lzma"
        commit: main
        tag: ${{ env.TAGNAME }}
