name: Regenerate Database
on:
  workflow_dispatch:
    inputs:
      reuse_latest_release:
        description: "Reuse inventory data from latest release?"
        type: boolean
        required: true
        default: false
  schedule:
    - cron: '2 * * * *' # run 2min past every hour
    
env:
  DOCKER_IMAGE: "${{ vars.BRICKSTORE_DOCKER_IMAGE }}:${{ vars.BRICKSTORE_BUILD_NUMBER }}"

jobs:
  regenerate:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Prepare
      run: |
        echo "TAGNAME=v$(date +'%Y.%m.%d-%H.%M')" >> $GITHUB_ENV
        mkdir -p data/cache/BrickStore

    - uses: actions/checkout@v4

    - name: Cache credentials
      uses: actions/cache@v4
      with:
        path: "data/cache/BrickStore/credentials.conf"  
        key: credentials-cache

    - name: Retrieve last run data
      if: github.event.inputs.reuse_latest_release
      shell: bash
      run: |
        wget https://github.com/rgriebl/brickstore-database/releases/latest/download/downloads.zip \
             -O data/cache/BrickStore/downloads.zip

    - name: Run BrickStore
      shell: bash
      run: |
        docker pull "${DOCKER_IMAGE}" 
        docker run --rm \
               -e BRICKLINK_USERNAME="${{ secrets.BRICKLINK_USERNAME }}" \
               -e BRICKLINK_PASSWORD="${{ secrets.BRICKLINK_PASSWORD }}" \
               -e BRICKLINK_AFFILIATE_APIKEY="${{ secrets.BRICKLINK_AFFILIATE_APIKEY }}" \
               -e REBRICKABLE_APIKEY="${{ secrets.REBRICKABLE_APIKEY }}" \
               -v "$PWD/data:/data" \
               --user $(id -u) \
               --name "brickstore-backend" \
               "$DOCKER_IMAGE" \
          2>&1 | tee regenerate.log

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "data/cache/BrickStore/downloads.zip,regenerate.log,data/db/*.lzma"
        commit: main
        tag: ${{ env.TAGNAME }}
